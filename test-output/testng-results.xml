<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="24" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-22T15:49:18 CET" name="zadanie2 by packages" finished-at="2022-03-22T15:49:21 CET" duration-ms="2480">
    <groups>
    </groups>
    <test started-at="2022-03-22T15:49:18 CET" name="test" finished-at="2022-03-22T15:49:21 CET" duration-ms="2480">
      <class name="test.ApiConnectionTest">
        <test-method signature="shouldCorrectRateFromDate_whenFindingApiRateData()[pri:0, instance:test.ApiConnectionTest@50ad3bc1]" started-at="2022-03-22T15:49:18 CET" name="shouldCorrectRateFromDate_whenFindingApiRateData" finished-at="2022-03-22T15:49:19 CET" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCorrectRateFromDate_whenFindingApiRateData -->
        <test-method signature="shouldReturnNull_whenFindingOlderRateData()[pri:0, instance:test.ApiConnectionTest@50ad3bc1]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnNull_whenFindingOlderRateData" finished-at="2022-03-22T15:49:19 CET" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnNull_whenFindingOlderRateData -->
      </class> <!-- test.ApiConnectionTest -->
      <class name="test.FileConnectionTest">
        <test-method signature="shouldReturnRateData_whenFindingApiRateData()[pri:0, instance:test.FileConnectionTest@6da21078]" started-at="2022-03-22T15:49:21 CET" name="shouldReturnRateData_whenFindingApiRateData" finished-at="2022-03-22T15:49:21 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnRateData_whenFindingApiRateData -->
        <test-method signature="shouldReturnTheSameRateData_whenFindingOlderRateData()[pri:0, instance:test.FileConnectionTest@6da21078]" started-at="2022-03-22T15:49:21 CET" name="shouldReturnTheSameRateData_whenFindingOlderRateData" finished-at="2022-03-22T15:49:21 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnTheSameRateData_whenFindingOlderRateData -->
      </class> <!-- test.FileConnectionTest -->
      <class name="test.ExchangerTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="setup" finished-at="2022-03-22T15:49:19 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldRetrunNull_whenNoDataConnectionContainsRate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="shouldRetrunNull_whenNoDataConnectionContainsRate" finished-at="2022-03-22T15:49:19 CET" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldRetrunNull_whenNoDataConnectionContainsRate -->
        <test-method signature="shouldReturnExpectedValue_whenInputIsCorrectOnExchangeFromPln()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnExpectedValue_whenInputIsCorrectOnExchangeFromPln" finished-at="2022-03-22T15:49:19 CET" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnExpectedValue_whenInputIsCorrectOnExchangeFromPln -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="setup" finished-at="2022-03-22T15:49:19 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="setup" finished-at="2022-03-22T15:49:19 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldReturnExpectedValue_whenInputIsCorrectOnExchangeToPln()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnExpectedValue_whenInputIsCorrectOnExchangeToPln" finished-at="2022-03-22T15:49:19 CET" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnExpectedValue_whenInputIsCorrectOnExchangeToPln -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="setup" finished-at="2022-03-22T15:49:19 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldReturnLastRateData_firstDataConnectionContainsRate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnLastRateData_firstDataConnectionContainsRate" finished-at="2022-03-22T15:49:20 CET" duration-ms="675" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [[date=2002-01-04, rate=3.5346, currency=EUR]] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [[date=2002-01-04, rate=3.5346, currency=EUR]] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:617)
at test.ExchangerTest.shouldReturnLastRateData_firstDataConnectionContainsRate(ExchangerTest.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnLastRateData_firstDataConnectionContainsRate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:20 CET" name="setup" finished-at="2022-03-22T15:49:20 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldReturnLastRateData_nextDataConnectionContainsRate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:20 CET" name="shouldReturnLastRateData_nextDataConnectionContainsRate" finished-at="2022-03-22T15:49:20 CET" duration-ms="578" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [[date=2002-01-04, rate=3.5346, currency=EUR]] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [[date=2002-01-04, rate=3.5346, currency=EUR]] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:617)
at test.ExchangerTest.shouldReturnLastRateData_nextDataConnectionContainsRate(ExchangerTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnLastRateData_nextDataConnectionContainsRate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:20 CET" name="setup" finished-at="2022-03-22T15:49:20 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldReturnRateData_firstDataConnectionContainsRate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:20 CET" name="shouldReturnRateData_firstDataConnectionContainsRate" finished-at="2022-03-22T15:49:21 CET" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnRateData_firstDataConnectionContainsRate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="setup" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldReturnRateData_nextDataConnectionContainsRate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="shouldReturnRateData_nextDataConnectionContainsRate" finished-at="2022-03-22T15:49:21 CET" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnRateData_nextDataConnectionContainsRate -->
        <test-method signature="shouldThrowExchangerException_whenRequestAfterTodayLocalDate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowExchangerException_whenRequestAfterTodayLocalDate" finished-at="2022-03-22T15:49:21 CET" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExchangerException_whenRequestAfterTodayLocalDate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="setup" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="setup" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldThrowExchangerException_whenRequestBeforFirstLocalDate()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowExchangerException_whenRequestBeforFirstLocalDate" finished-at="2022-03-22T15:49:21 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExchangerException_whenRequestBeforFirstLocalDate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="setup" finished-at="2022-03-22T15:49:21 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldThrowExchangerException_whenRequestNegativeValue()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowExchangerException_whenRequestNegativeValue" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExchangerException_whenRequestNegativeValue -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="setup" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldThrowExchangerException_whenRequestNullValue()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowExchangerException_whenRequestNullValue" finished-at="2022-03-22T15:49:21 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExchangerException_whenRequestNullValue -->
        <test-method signature="shouldThrowExchangerException_whennRequestNullCurrency()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowExchangerException_whennRequestNullCurrency" finished-at="2022-03-22T15:49:21 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExchangerException_whennRequestNullCurrency -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ExchangerTest@10d307f1]" started-at="2022-03-22T15:49:21 CET" name="setup" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- test.ExchangerTest -->
      <class name="test.UrlCreatorTest">
        <test-method signature="shouldReturnCorrectURL_whenCorrectUrlreturned()[pri:0, instance:test.UrlCreatorTest@4229bb3f]" started-at="2022-03-22T15:49:21 CET" name="shouldReturnCorrectURL_whenCorrectUrlreturned" finished-at="2022-03-22T15:49:21 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnCorrectURL_whenCorrectUrlreturned -->
      </class> <!-- test.UrlCreatorTest -->
      <class name="test.CurrencyCalculatorTest">
        <test-method signature="shouldReturnCorrectValue_whenInputCorrectOnCalculateTFromPln()[pri:0, instance:test.CurrencyCalculatorTest@3d5c822d]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnCorrectValue_whenInputCorrectOnCalculateTFromPln" finished-at="2022-03-22T15:49:19 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnCorrectValue_whenInputCorrectOnCalculateTFromPln -->
        <test-method signature="shouldReturnCorrectValue_whenInputCorrectOnCalculateToPln()[pri:0, instance:test.CurrencyCalculatorTest@3d5c822d]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnCorrectValue_whenInputCorrectOnCalculateToPln" finished-at="2022-03-22T15:49:19 CET" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnCorrectValue_whenInputCorrectOnCalculateToPln -->
      </class> <!-- test.CurrencyCalculatorTest -->
      <class name="test.InputValidatorTest">
        <test-method signature="shouldThrowDateBeforeFirstException_whenDateBeforeFirst()[pri:0, instance:test.InputValidatorTest@7fee8714]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowDateBeforeFirstException_whenDateBeforeFirst" finished-at="2022-03-22T15:49:21 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowDateBeforeFirstException_whenDateBeforeFirst -->
        <test-method signature="shouldThrowNegativeValueException_whenValueNegative()[pri:0, instance:test.InputValidatorTest@7fee8714]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowNegativeValueException_whenValueNegative" finished-at="2022-03-22T15:49:21 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowNegativeValueException_whenValueNegative -->
        <test-method signature="shouldThrowsDateAfterTodayException_whenDateAfterToday()[pri:0, instance:test.InputValidatorTest@7fee8714]" started-at="2022-03-22T15:49:21 CET" name="shouldThrowsDateAfterTodayException_whenDateAfterToday" finished-at="2022-03-22T15:49:21 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowsDateAfterTodayException_whenDateAfterToday -->
      </class> <!-- test.InputValidatorTest -->
      <class name="test.CachedConnectionTest">
        <test-method signature="shouldFindExpectedRateDate_whenFindingRateData()[pri:0, instance:test.CachedConnectionTest@4bb33f74]" started-at="2022-03-22T15:49:19 CET" name="shouldFindExpectedRateDate_whenFindingRateData" finished-at="2022-03-22T15:49:19 CET" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFindExpectedRateDate_whenFindingRateData -->
        <test-method signature="shouldReturnDiffrentRateDate_whenFindingRequestWithNewCurrency()[pri:0, instance:test.CachedConnectionTest@4bb33f74]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnDiffrentRateDate_whenFindingRequestWithNewCurrency" finished-at="2022-03-22T15:49:19 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnDiffrentRateDate_whenFindingRequestWithNewCurrency -->
        <test-method signature="shouldReturnNull_whenFindingRequestWithNewDate()[pri:0, instance:test.CachedConnectionTest@4bb33f74]" started-at="2022-03-22T15:49:19 CET" name="shouldReturnNull_whenFindingRequestWithNewDate" finished-at="2022-03-22T15:49:19 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnNull_whenFindingRequestWithNewDate -->
        <test-method signature="shouldSavedRateData_whenFindingSavedRateData()[pri:0, instance:test.CachedConnectionTest@4bb33f74]" started-at="2022-03-22T15:49:19 CET" name="shouldSavedRateData_whenFindingSavedRateData" finished-at="2022-03-22T15:49:19 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSavedRateData_whenFindingSavedRateData -->
      </class> <!-- test.CachedConnectionTest -->
    </test> <!-- test -->
  </suite> <!-- zadanie2 by packages -->
</testng-results>
